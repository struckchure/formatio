// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	lib "pkg.formatio/lib"
)

// MockIAuth0 is an autogenerated mock type for the IAuth0 type
type MockIAuth0 struct {
	mock.Mock
}

// GetTokenClaims provides a mock function with given fields: _a0
func (_m *MockIAuth0) GetTokenClaims(_a0 string) (*lib.Auth0TokenClaims, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetTokenClaims")
	}

	var r0 *lib.Auth0TokenClaims
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*lib.Auth0TokenClaims, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(string) *lib.Auth0TokenClaims); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*lib.Auth0TokenClaims)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockIAuth0 creates a new instance of MockIAuth0. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIAuth0(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIAuth0 {
	mock := &MockIAuth0{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
