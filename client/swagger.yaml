definitions:
  db.CardModel:
    properties:
      authToken:
        type: string
      cardType:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      expiryMonth:
        type: string
      expiryYear:
        type: string
      id:
        type: string
      isApproved:
        type: boolean
      isDefault:
        type: boolean
      lastDigits:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/db.UserModel'
      userId:
        type: string
    required:
    - authToken
    - cardType
    - createdAt
    - deletedAt
    - expiryMonth
    - expiryYear
    - id
    - isApproved
    - isDefault
    - lastDigits
    - updatedAt
    - user
    - userId
    type: object
  db.Currency:
    enum:
    - NGN
    type: string
    x-enum-varnames:
    - CurrencyNgn
  db.DeploymentLogModel:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      deployment:
        $ref: '#/definitions/db.DeploymentModel'
      deploymentId:
        type: string
      id:
        type: string
      jobId:
        type: string
      message:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - deletedAt
    - deployment
    - deploymentId
    - id
    - jobId
    - message
    - updatedAt
    type: object
  db.DeploymentModel:
    properties:
      DeploymentLog:
        items:
          $ref: '#/definitions/db.DeploymentLogModel'
        type: array
      actor:
        type: string
      commitHash:
        type: string
      commitMessage:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      machine:
        $ref: '#/definitions/db.MachineModel'
      machineId:
        type: string
      repoConnection:
        $ref: '#/definitions/db.RepoConnectionModel'
      repoConnectionId:
        type: string
      status:
        $ref: '#/definitions/db.DeploymentStatus'
      updatedAt:
        type: string
    required:
    - DeploymentLog
    - actor
    - commitHash
    - commitMessage
    - createdAt
    - deletedAt
    - id
    - machine
    - machineId
    - repoConnection
    - repoConnectionId
    - status
    - updatedAt
    type: object
  db.DeploymentStatus:
    enum:
    - IDLE
    - IN_PROGRESS
    - SUCCESSFUL
    - FAILED
    type: string
    x-enum-varnames:
    - DeploymentStatusIdle
    - DeploymentStatusInProgress
    - DeploymentStatusSuccessful
    - DeploymentStatusFailed
  db.GithubAccountConnectionModel:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      githubEmail:
        type: string
      githubId:
        type: string
      githubInstallationId:
        type: integer
      githubUsername:
        type: string
      id:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/db.UserModel'
      userId:
        type: string
    required:
    - createdAt
    - deletedAt
    - githubEmail
    - githubId
    - githubInstallationId
    - githubUsername
    - id
    - updatedAt
    - user
    - userId
    type: object
  db.InvoiceModel:
    properties:
      createdAt:
        type: string
      currency:
        $ref: '#/definitions/db.Currency'
      deletedAt:
        type: string
      description:
        type: string
      from:
        type: string
      id:
        type: string
      productId:
        type: string
      quantity:
        type: integer
      reference:
        type: string
      status:
        $ref: '#/definitions/db.InvoiceStatus'
      to:
        type: string
      totalPrice:
        type: number
      unitPrice:
        type: number
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/db.UserModel'
      userId:
        type: string
    required:
    - createdAt
    - currency
    - deletedAt
    - description
    - from
    - id
    - productId
    - quantity
    - reference
    - status
    - to
    - totalPrice
    - unitPrice
    - updatedAt
    - user
    - userId
    type: object
  db.InvoiceStatus:
    enum:
    - PAID
    - UNPAID
    type: string
    x-enum-varnames:
    - InvoiceStatusPaid
    - InvoiceStatusUnpaid
  db.MachineModel:
    properties:
      Deployment:
        items:
          $ref: '#/definitions/db.DeploymentModel'
        type: array
      Network:
        items:
          $ref: '#/definitions/db.NetworkModel'
        type: array
      RepoConnection:
        items:
          $ref: '#/definitions/db.RepoConnectionModel'
        type: array
      containerId:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      machineImage:
        type: string
      machineName:
        type: string
      machineStatus:
        $ref: '#/definitions/db.MachineStatus'
      owner:
        $ref: '#/definitions/db.UserModel'
      ownerId:
        type: string
      plan:
        $ref: '#/definitions/db.MachinePlanModel'
      planId:
        type: string
      updatedAt:
        type: string
    required:
    - Deployment
    - Network
    - RepoConnection
    - containerId
    - createdAt
    - deletedAt
    - id
    - machineImage
    - machineName
    - machineStatus
    - owner
    - ownerId
    - plan
    - planId
    - updatedAt
    type: object
  db.MachinePlanModel:
    properties:
      Machine:
        items:
          $ref: '#/definitions/db.MachineModel'
        type: array
      cpu:
        type: string
      createdAt:
        type: string
      currency:
        $ref: '#/definitions/db.Currency'
      deletedAt:
        type: string
      hourlyRate:
        type: number
      id:
        type: string
      memory:
        type: string
      monthlyRate:
        type: number
      name:
        type: string
      updatedAt:
        type: string
    required:
    - Machine
    - cpu
    - createdAt
    - currency
    - deletedAt
    - hourlyRate
    - id
    - memory
    - monthlyRate
    - name
    - updatedAt
    type: object
  db.MachineStatus:
    enum:
    - CREATING
    - RUNNING
    - REBOOTING
    - SHUTTING_DOWN
    - SHUTDOWN
    type: string
    x-enum-varnames:
    - MachineStatusCreating
    - MachineStatusRunning
    - MachineStatusRebooting
    - MachineStatusShuttingDown
    - MachineStatusShutdown
  db.NetworkModel:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      destinationPort:
        type: integer
      hostName:
        type: string
      id:
        type: string
      ingressId:
        type: string
      listeningPort:
        type: integer
      machine:
        $ref: '#/definitions/db.MachineModel'
      machineId:
        type: string
      protocol:
        type: string
      serviceId:
        type: string
      updatedAt:
        type: string
    required:
    - createdAt
    - deletedAt
    - destinationPort
    - hostName
    - id
    - ingressId
    - listeningPort
    - machine
    - machineId
    - protocol
    - serviceId
    - updatedAt
    type: object
  db.RepoConnectionModel:
    properties:
      Deployment:
        items:
          $ref: '#/definitions/db.DeploymentModel'
        type: array
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      machine:
        $ref: '#/definitions/db.MachineModel'
      machineId:
        type: string
      repoId:
        type: string
      repoName:
        type: string
      updatedAt:
        type: string
    required:
    - Deployment
    - createdAt
    - deletedAt
    - id
    - machine
    - machineId
    - repoId
    - repoName
    - updatedAt
    type: object
  db.SocialConnectionModel:
    properties:
      connectionId:
        type: string
      connectionType:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/db.UserModel'
      userId:
        type: string
    required:
    - connectionId
    - connectionType
    - createdAt
    - deletedAt
    - id
    - updatedAt
    - user
    - userId
    type: object
  db.TransactionModel:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      currency:
        $ref: '#/definitions/db.Currency'
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: string
      reference:
        type: string
      status:
        $ref: '#/definitions/db.TransactionStatus'
      type:
        $ref: '#/definitions/db.TransactionType'
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/db.UserModel'
      userId:
        type: string
    required:
    - amount
    - createdAt
    - currency
    - deletedAt
    - description
    - id
    - reference
    - status
    - type
    - updatedAt
    - user
    - userId
    type: object
  db.TransactionStatus:
    enum:
    - PENDING
    - SUCCESS
    - FAILED
    type: string
    x-enum-varnames:
    - TransactionStatusPending
    - TransactionStatusSuccess
    - TransactionStatusFailed
  db.TransactionType:
    enum:
    - DEBIT
    - CREDIT
    type: string
    x-enum-varnames:
    - TransactionTypeDebit
    - TransactionTypeCredit
  db.UserModel:
    properties:
      Card:
        items:
          $ref: '#/definitions/db.CardModel'
        type: array
      GithubAccountConnection:
        items:
          $ref: '#/definitions/db.GithubAccountConnectionModel'
        type: array
      Invoice:
        items:
          $ref: '#/definitions/db.InvoiceModel'
        type: array
      Machine:
        items:
          $ref: '#/definitions/db.MachineModel'
        type: array
      SocialConnection:
        items:
          $ref: '#/definitions/db.SocialConnectionModel'
        type: array
      Transaction:
        items:
          $ref: '#/definitions/db.TransactionModel'
        type: array
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      password:
        type: string
      roles:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    required:
    - Card
    - GithubAccountConnection
    - Invoice
    - Machine
    - SocialConnection
    - Transaction
    - createdAt
    - deletedAt
    - email
    - firstName
    - id
    - lastName
    - password
    - roles
    - updatedAt
    type: object
  handlers.RedirectResult:
    properties:
      link:
        type: string
    required:
    - link
    type: object
  lib.AuthTokens:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    required:
    - accessToken
    - refreshToken
    type: object
  services.DeployRepoArgs:
    properties:
      connectionId:
        type: string
      ref:
        type: string
    required:
    - connectionId
    - ref
    type: object
  types.Auth0UserArgs:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  types.AuthorizeCardArgs:
    properties:
      otp:
        type: string
      reference:
        type: string
    required:
    - otp
    - reference
    type: object
  types.CreateMachineArgs:
    properties:
      machineImage:
        type: string
      machineName:
        type: string
      planId:
        type: string
    required:
    - machineImage
    - machineName
    - planId
    type: object
  types.CreateMachinePlanArgs:
    properties:
      cpu:
        type: string
      currency:
        type: string
      memory:
        type: string
      monthlyRate:
        type: integer
      name:
        type: string
    required:
    - cpu
    - currency
    - memory
    - monthlyRate
    - name
    type: object
  types.CreateNetworkArgs:
    properties:
      destinationPort:
        type: integer
      listeningPort:
        type: integer
      machineId:
        type: string
      protocol:
        type: string
    required:
    - destinationPort
    - listeningPort
    - machineId
    - protocol
    type: object
  types.CreateRepoConnectionArgs:
    properties:
      machineId:
        type: string
      repoId:
        type: string
      repoName:
        type: string
    required:
    - machineId
    - repoId
    - repoName
    type: object
  types.ListInvoiceArgs:
    properties:
      search:
        type: string
      skip:
        type: integer
      sortBy:
        type: string
      take:
        type: integer
      userId:
        type: string
    type: object
  types.LoginUserArgs:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  types.LoginUserResult:
    properties:
      tokens:
        $ref: '#/definitions/lib.AuthTokens'
    required:
    - tokens
    type: object
  types.PreAuthorizeCardArgs:
    properties:
      cardNumber:
        type: string
      cvv:
        type: string
      expiryMonth:
        type: string
      expiryYear:
        type: string
      pin:
        type: string
    required:
    - cardNumber
    - cvv
    - expiryMonth
    - expiryYear
    - pin
    type: object
  types.PreAuthorizeCardResult:
    properties:
      reference:
        type: string
    required:
    - reference
    type: object
  types.RefreshAccessTokenArgs:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  types.RegisterUserArgs:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  types.RegisterUserResult:
    properties:
      Card:
        items:
          $ref: '#/definitions/db.CardModel'
        type: array
      GithubAccountConnection:
        items:
          $ref: '#/definitions/db.GithubAccountConnectionModel'
        type: array
      Invoice:
        items:
          $ref: '#/definitions/db.InvoiceModel'
        type: array
      Machine:
        items:
          $ref: '#/definitions/db.MachineModel'
        type: array
      SocialConnection:
        items:
          $ref: '#/definitions/db.SocialConnectionModel'
        type: array
      Transaction:
        items:
          $ref: '#/definitions/db.TransactionModel'
        type: array
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      password:
        type: string
      roles:
        items:
          type: string
        type: array
      tokens:
        $ref: '#/definitions/lib.AuthTokens'
      updatedAt:
        type: string
    required:
    - Card
    - GithubAccountConnection
    - Invoice
    - Machine
    - SocialConnection
    - Transaction
    - createdAt
    - deletedAt
    - email
    - firstName
    - id
    - lastName
    - password
    - roles
    - tokens
    - updatedAt
    type: object
  types.Repository:
    properties:
      fullName:
        type: string
      id:
        type: integer
      name:
        type: string
      private:
        type: boolean
      url:
        type: string
    required:
    - fullName
    - id
    - name
    - private
    - url
    type: object
  types.UpdateCardArgs:
    properties:
      AuthToken:
        type: string
      CardType:
        type: string
      ExpiryMonth:
        type: string
      ExpiryYear:
        type: string
      IsApproved:
        type: boolean
      IsDefault:
        type: boolean
      LastDigits:
        type: string
    type: object
  types.UpdateMachineArgs:
    properties:
      machineImage:
        type: string
      machineName:
        type: string
      ownerId:
        type: string
      planId:
        type: string
    type: object
  types.UpdateMachinePlanArgs:
    properties:
      cpu:
        description: HourlyRate  *int32  `json:"hourlyRate" swag-validate:"optional"`
        type: string
      currency:
        type: string
      memory:
        type: string
      monthlyRate:
        type: integer
      name:
        type: string
    type: object
  types.UpdateRepoConnectionArgs:
    properties:
      machineId:
        type: string
      repoId:
        type: string
      repoName:
        type: string
    type: object
  types.UpdateUserArgs:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    required:
    - email
    type: object
info:
  contact:
    email: formatio@overal-x.org
    name: Formatio Team
  title: Formatio API
  version: "1.0"
paths:
  /auth/login/:
    post:
      consumes:
      - application/json
      operationId: loginUser
      parameters:
      - description: Login User
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.LoginUserArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginUserResult'
      tags:
      - auth
  /auth/refresh-access-token/:
    post:
      consumes:
      - application/json
      operationId: refreshAccessToken
      parameters:
      - description: Refresh Access Token
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.RefreshAccessTokenArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginUserResult'
      tags:
      - auth
  /auth/register/:
    post:
      consumes:
      - application/json
      operationId: registerUser
      parameters:
      - description: Register User
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.RegisterUserArgs'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.RegisterUserResult'
      tags:
      - auth
  /auth/social-connection/:
    post:
      consumes:
      - application/json
      operationId: authSocialConnection
      parameters:
      - description: Auth0 User
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.Auth0UserArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginUserResult'
      tags:
      - auth
  /billing/cards:
    get:
      consumes:
      - application/json
      operationId: listCards
      parameters:
      - in: query
        name: search
        type: string
      - in: query
        name: skip
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.CardModel'
            type: array
      tags:
      - billing
  /billing/cards/{cardId}:
    delete:
      consumes:
      - application/json
      operationId: deleteCard
      parameters:
      - description: Card Id
        in: path
        name: cardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      tags:
      - billing
    patch:
      consumes:
      - application/json
      operationId: UpdateCard
      parameters:
      - description: Card Id
        in: path
        name: cardId
        required: true
        type: string
      - description: Update Card
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.UpdateCardArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/db.CardModel'
      tags:
      - billing
  /billing/cards/authorize:
    post:
      consumes:
      - application/json
      operationId: authorizeCard
      parameters:
      - description: Update Repo Connection
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.AuthorizeCardArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/db.CardModel'
      tags:
      - billing
  /billing/cards/pre-authorize:
    post:
      consumes:
      - application/json
      operationId: preAuthorizeCard
      parameters:
      - description: Pre-Authorize Card
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.PreAuthorizeCardArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PreAuthorizeCardResult'
      tags:
      - billing
  /billing/invoice:
    get:
      consumes:
      - application/json
      operationId: listInvoice
      parameters:
      - description: List Invoice
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.ListInvoiceArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            items:
              $ref: '#/definitions/db.InvoiceModel'
            type: array
      tags:
      - billing
  /billing/invoice/{invoiceId}:
    get:
      consumes:
      - application/json
      operationId: getInvoice
      parameters:
      - description: Invoice Id
        in: path
        name: invoiceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.InvoiceModel'
      tags:
      - billing
  /deployments:
    get:
      consumes:
      - application/json
      operationId: listDeployments
      parameters:
      - description: Machine Id
        in: query
        name: machineId
        type: string
      - in: query
        name: machineId
        required: true
        type: string
      - in: query
        name: repoConnectionId
        type: string
      - in: query
        name: search
        type: string
      - in: query
        name: skip
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.DeploymentModel'
            type: array
      tags:
      - deployments
  /deployments/{deploymentId}:
    get:
      consumes:
      - application/json
      operationId: getDeploymentById
      parameters:
      - description: Deployment Id
        in: path
        name: deploymentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.DeploymentModel'
      tags:
      - deployments
  /deployments/{deploymentId}/logs:
    get:
      consumes:
      - application/json
      operationId: listDeploymentLogsById
      parameters:
      - description: Deployment Id
        in: path
        name: deploymentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.DeploymentLogModel'
            type: array
      tags:
      - deployments
  /deployments/deploy:
    post:
      consumes:
      - application/json
      operationId: deployRepo
      parameters:
      - description: Deploy Repo
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/services.DeployRepoArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - deployments
  /gh/account-connections:
    get:
      consumes:
      - application/json
      operationId: listAccountConnections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.GithubAccountConnectionModel'
            type: array
      tags:
      - github
  /gh/authorize:
    get:
      consumes:
      - application/json
      operationId: authorizeGithubAccount
      parameters:
      - in: query
        name: redirectUrl
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RedirectResult'
      tags:
      - github
  /gh/repos:
    get:
      consumes:
      - application/json
      operationId: ListRepositories
      parameters:
      - default: 1
        in: query
        name: pageNumber
        type: integer
      - default: 20
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Repository'
            type: array
      tags:
      - github
  /gh/update-app-access:
    get:
      consumes:
      - application/json
      operationId: updateAppAccess
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RedirectResult'
      tags:
      - github
  /machine:
    get:
      consumes:
      - application/json
      operationId: listMachines
      parameters:
      - in: query
        name: search
        type: string
      - in: query
        name: skip
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: take
        type: integer
      - in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.MachineModel'
            type: array
      tags:
      - machines
    post:
      consumes:
      - application/json
      operationId: createMachine
      parameters:
      - description: List Machine
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.CreateMachineArgs'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/db.MachineModel'
            type: array
      tags:
      - machines
  /machine/{machineId}:
    delete:
      consumes:
      - application/json
      operationId: deleteMachine
      parameters:
      - description: Machine Id
        in: path
        name: machineId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      tags:
      - machines
    get:
      consumes:
      - application/json
      operationId: getMachine
      parameters:
      - description: Machine Id
        in: path
        name: machineId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.MachineModel'
      tags:
      - machines
    patch:
      consumes:
      - application/json
      operationId: updateMachine
      parameters:
      - description: Machine Id
        in: path
        name: machineId
        required: true
        type: string
      - description: Update Machine
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.UpdateMachineArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
      tags:
      - machines
  /network:
    get:
      consumes:
      - application/json
      operationId: listNetworks
      parameters:
      - in: query
        name: machineId
        type: string
      - in: query
        name: search
        type: string
      - in: query
        name: skip
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.NetworkModel'
            type: array
      tags:
      - network
    post:
      consumes:
      - application/json
      operationId: createNetwork
      parameters:
      - description: List Networks
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.CreateNetworkArgs'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.NetworkModel'
      tags:
      - network
  /network/{networkId}:
    delete:
      consumes:
      - application/json
      operationId: deleteNetwork
      parameters:
      - description: Network Id
        in: path
        name: networkId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      tags:
      - network
  /plans:
    get:
      consumes:
      - application/json
      operationId: listMachinePlans
      parameters:
      - in: query
        name: search
        type: string
      - in: query
        name: skip
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.MachinePlanModel'
            type: array
      tags:
      - plans
    post:
      consumes:
      - application/json
      operationId: createMachinePlan
      parameters:
      - description: Create Machine Plan
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.CreateMachinePlanArgs'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.MachinePlanModel'
      tags:
      - plans
  /plans/{machinePlanId}:
    delete:
      consumes:
      - application/json
      operationId: deleteMachinePlan
      parameters:
      - description: Machine Plan Id
        in: path
        name: machinePlanId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      tags:
      - plans
    get:
      consumes:
      - application/json
      operationId: getMachinePlan
      parameters:
      - description: Machine Plan Id
        in: path
        name: machinePlanId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.MachinePlanModel'
      tags:
      - plans
    patch:
      consumes:
      - application/json
      operationId: updateMachinePlan
      parameters:
      - description: Machine Plan Id
        in: path
        name: machinePlanId
        required: true
        type: string
      - description: Update Machine
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.UpdateMachinePlanArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/db.MachinePlanModel'
      tags:
      - plans
  /repo-connection:
    get:
      consumes:
      - application/json
      operationId: listRepoConnections
      parameters:
      - in: query
        name: machineId
        type: string
      - in: query
        name: search
        type: string
      - in: query
        name: skip
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: take
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.RepoConnectionModel'
            type: array
      tags:
      - repo-connection
    post:
      consumes:
      - application/json
      operationId: createRepoConnection
      parameters:
      - description: Create Repo Connection
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.CreateRepoConnectionArgs'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.RepoConnectionModel'
      tags:
      - repo-connection
  /repo-connection/{connectionId}:
    delete:
      consumes:
      - application/json
      operationId: deleteRepoConnection
      parameters:
      - description: Repo Connection Id
        in: path
        name: connectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      tags:
      - repo-connection
    get:
      consumes:
      - application/json
      operationId: getRepoConnection
      parameters:
      - description: Repo Connection Id
        in: path
        name: connectionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/db.RepoConnectionModel'
      tags:
      - repo-connection
    patch:
      consumes:
      - application/json
      operationId: updateRepoConnection
      parameters:
      - description: Repo Connection Id
        in: path
        name: connectionId
        required: true
        type: string
      - description: Update Repo Connection
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.UpdateRepoConnectionArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/db.RepoConnectionModel'
      tags:
      - repo-connection
  /user/profile/:
    get:
      consumes:
      - application/json
      operationId: getProfileUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.UserModel'
      tags:
      - user
    patch:
      consumes:
      - application/json
      operationId: updateProfileUser
      parameters:
      - description: Update User
        in: body
        name: args
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserArgs'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/db.UserModel'
      tags:
      - user
swagger: "2.0"
