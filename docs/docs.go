// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Formatio Team",
            "email": "formatio@overal-x.org"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "operationId": "loginUser",
                "parameters": [
                    {
                        "description": "Login User",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginUserArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.LoginUserResult"
                        }
                    }
                }
            }
        },
        "/auth/refresh-access-token/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "operationId": "refreshAccessToken",
                "parameters": [
                    {
                        "description": "Refresh Access Token",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RefreshAccessTokenArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.LoginUserResult"
                        }
                    }
                }
            }
        },
        "/auth/register/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "operationId": "registerUser",
                "parameters": [
                    {
                        "description": "Register User",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterUserArgs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/types.RegisterUserResult"
                        }
                    }
                }
            }
        },
        "/auth/social-connection/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "operationId": "authSocialConnection",
                "parameters": [
                    {
                        "description": "Auth0 User",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Auth0UserArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.LoginUserResult"
                        }
                    }
                }
            }
        },
        "/billing/cards": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "listCards",
                "parameters": [
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.CardModel"
                            }
                        }
                    }
                }
            }
        },
        "/billing/cards/authorize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "authorizeCard",
                "parameters": [
                    {
                        "description": "Update Repo Connection",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.AuthorizeCardArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/db.CardModel"
                        }
                    }
                }
            }
        },
        "/billing/cards/pre-authorize": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "preAuthorizeCard",
                "parameters": [
                    {
                        "description": "Pre-Authorize Card",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.PreAuthorizeCardArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PreAuthorizeCardResult"
                        }
                    }
                }
            }
        },
        "/billing/cards/{cardId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "deleteCard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card Id",
                        "name": "cardId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "UpdateCard",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card Id",
                        "name": "cardId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Card",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateCardArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/db.CardModel"
                        }
                    }
                }
            }
        },
        "/billing/invoice": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "listInvoice",
                "parameters": [
                    {
                        "description": "List Invoice",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ListInvoiceArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.InvoiceModel"
                            }
                        }
                    }
                }
            }
        },
        "/billing/invoice/{invoiceId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "operationId": "getInvoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invoice Id",
                        "name": "invoiceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.InvoiceModel"
                        }
                    }
                }
            }
        },
        "/deployments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "operationId": "listDeployments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Id",
                        "name": "machineId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "machineId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "repoConnectionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.DeploymentModel"
                            }
                        }
                    }
                }
            }
        },
        "/deployments/deploy": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "operationId": "deployRepo",
                "parameters": [
                    {
                        "description": "Deploy Repo",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.DeployRepoArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/deployments/{deploymentId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "operationId": "getDeploymentById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment Id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.DeploymentModel"
                        }
                    }
                }
            }
        },
        "/deployments/{deploymentId}/logs": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deployments"
                ],
                "operationId": "listDeploymentLogsById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment Id",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.DeploymentLogModel"
                            }
                        }
                    }
                }
            }
        },
        "/gh/account-connections": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "github"
                ],
                "operationId": "listAccountConnections",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GithubAccountConnectionModel"
                            }
                        }
                    }
                }
            }
        },
        "/gh/authorize": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "github"
                ],
                "operationId": "authorizeGithubAccount",
                "parameters": [
                    {
                        "type": "string",
                        "name": "redirectUrl",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.RedirectResult"
                        }
                    }
                }
            }
        },
        "/gh/repos": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "github"
                ],
                "operationId": "ListRepositories",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Repository"
                            }
                        }
                    }
                }
            }
        },
        "/gh/update-app-access": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "github"
                ],
                "operationId": "updateAppAccess",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.RedirectResult"
                        }
                    }
                }
            }
        },
        "/machine": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "operationId": "listMachines",
                "parameters": [
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "userId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.MachineModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "operationId": "createMachine",
                "parameters": [
                    {
                        "description": "List Machine",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateMachineArgs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.MachineModel"
                        }
                    }
                }
            }
        },
        "/machine/{machineId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "operationId": "getMachine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Id",
                        "name": "machineId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.MachineModel"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "operationId": "deleteMachine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Id",
                        "name": "machineId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "operationId": "updateMachine",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Id",
                        "name": "machineId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Machine",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateMachineArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                }
            }
        },
        "/network": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "operationId": "listNetworks",
                "parameters": [
                    {
                        "type": "string",
                        "name": "machineId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.NetworkModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "operationId": "createNetwork",
                "parameters": [
                    {
                        "description": "List Networks",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateNetworkArgs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.NetworkModel"
                        }
                    }
                }
            }
        },
        "/network/{networkId}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network"
                ],
                "operationId": "deleteNetwork",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network Id",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "operationId": "listMachinePlans",
                "parameters": [
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.MachinePlanModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "operationId": "createMachinePlan",
                "parameters": [
                    {
                        "description": "Create Machine Plan",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateMachinePlanArgs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.MachinePlanModel"
                        }
                    }
                }
            }
        },
        "/plans/{machinePlanId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "operationId": "getMachinePlan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Plan Id",
                        "name": "machinePlanId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.MachinePlanModel"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "operationId": "deleteMachinePlan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Plan Id",
                        "name": "machinePlanId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "operationId": "updateMachinePlan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Machine Plan Id",
                        "name": "machinePlanId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Machine",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateMachinePlanArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/db.MachinePlanModel"
                        }
                    }
                }
            }
        },
        "/repo-connection": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repo-connection"
                ],
                "operationId": "listRepoConnections",
                "parameters": [
                    {
                        "type": "string",
                        "name": "machineId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.RepoConnectionModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repo-connection"
                ],
                "operationId": "createRepoConnection",
                "parameters": [
                    {
                        "description": "Create Repo Connection",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateRepoConnectionArgs"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.RepoConnectionModel"
                        }
                    }
                }
            }
        },
        "/repo-connection/{connectionId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repo-connection"
                ],
                "operationId": "getRepoConnection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repo Connection Id",
                        "name": "connectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/db.RepoConnectionModel"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repo-connection"
                ],
                "operationId": "deleteRepoConnection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repo Connection Id",
                        "name": "connectionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repo-connection"
                ],
                "operationId": "updateRepoConnection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repo Connection Id",
                        "name": "connectionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Repo Connection",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateRepoConnectionArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/db.RepoConnectionModel"
                        }
                    }
                }
            }
        },
        "/user/profile/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "getProfileUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserModel"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "operationId": "updateProfileUser",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "args",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserArgs"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/db.UserModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.CardModel": {
            "type": "object",
            "required": [
                "authToken",
                "cardType",
                "createdAt",
                "deletedAt",
                "expiryMonth",
                "expiryYear",
                "id",
                "isApproved",
                "isDefault",
                "lastDigits",
                "updatedAt",
                "user",
                "userId"
            ],
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "cardType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "expiryMonth": {
                    "type": "string"
                },
                "expiryYear": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isApproved": {
                    "type": "boolean"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "lastDigits": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/db.UserModel"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "db.Currency": {
            "type": "string",
            "enum": [
                "NGN"
            ],
            "x-enum-varnames": [
                "CurrencyNgn"
            ]
        },
        "db.DeploymentLogModel": {
            "type": "object",
            "required": [
                "createdAt",
                "deletedAt",
                "deployment",
                "deploymentId",
                "id",
                "jobId",
                "message",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deployment": {
                    "$ref": "#/definitions/db.DeploymentModel"
                },
                "deploymentId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "jobId": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.DeploymentModel": {
            "type": "object",
            "required": [
                "DeploymentLog",
                "actor",
                "commitHash",
                "commitMessage",
                "createdAt",
                "deletedAt",
                "id",
                "machine",
                "machineId",
                "repoConnection",
                "repoConnectionId",
                "status",
                "updatedAt"
            ],
            "properties": {
                "DeploymentLog": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.DeploymentLogModel"
                    }
                },
                "actor": {
                    "type": "string"
                },
                "commitHash": {
                    "type": "string"
                },
                "commitMessage": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "machine": {
                    "$ref": "#/definitions/db.MachineModel"
                },
                "machineId": {
                    "type": "string"
                },
                "repoConnection": {
                    "$ref": "#/definitions/db.RepoConnectionModel"
                },
                "repoConnectionId": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.DeploymentStatus"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.DeploymentStatus": {
            "type": "string",
            "enum": [
                "IDLE",
                "IN_PROGRESS",
                "SUCCESSFUL",
                "FAILED"
            ],
            "x-enum-varnames": [
                "DeploymentStatusIdle",
                "DeploymentStatusInProgress",
                "DeploymentStatusSuccessful",
                "DeploymentStatusFailed"
            ]
        },
        "db.GithubAccountConnectionModel": {
            "type": "object",
            "required": [
                "createdAt",
                "deletedAt",
                "githubEmail",
                "githubId",
                "githubInstallationId",
                "githubUsername",
                "id",
                "updatedAt",
                "user",
                "userId"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "githubEmail": {
                    "type": "string"
                },
                "githubId": {
                    "type": "string"
                },
                "githubInstallationId": {
                    "type": "integer"
                },
                "githubUsername": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/db.UserModel"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "db.InvoiceModel": {
            "type": "object",
            "required": [
                "createdAt",
                "currency",
                "deletedAt",
                "description",
                "from",
                "id",
                "productId",
                "quantity",
                "reference",
                "status",
                "to",
                "totalPrice",
                "unitPrice",
                "updatedAt",
                "user",
                "userId"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/db.Currency"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "productId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "reference": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.InvoiceStatus"
                },
                "to": {
                    "type": "string"
                },
                "totalPrice": {
                    "type": "number"
                },
                "unitPrice": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/db.UserModel"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "db.InvoiceStatus": {
            "type": "string",
            "enum": [
                "PAID",
                "UNPAID"
            ],
            "x-enum-varnames": [
                "InvoiceStatusPaid",
                "InvoiceStatusUnpaid"
            ]
        },
        "db.MachineModel": {
            "type": "object",
            "required": [
                "Deployment",
                "Network",
                "RepoConnection",
                "containerId",
                "createdAt",
                "deletedAt",
                "id",
                "machineImage",
                "machineName",
                "machineStatus",
                "owner",
                "ownerId",
                "plan",
                "planId",
                "updatedAt"
            ],
            "properties": {
                "Deployment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.DeploymentModel"
                    }
                },
                "Network": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.NetworkModel"
                    }
                },
                "RepoConnection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RepoConnectionModel"
                    }
                },
                "containerId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "machineImage": {
                    "type": "string"
                },
                "machineName": {
                    "type": "string"
                },
                "machineStatus": {
                    "$ref": "#/definitions/db.MachineStatus"
                },
                "owner": {
                    "$ref": "#/definitions/db.UserModel"
                },
                "ownerId": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/db.MachinePlanModel"
                },
                "planId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.MachinePlanModel": {
            "type": "object",
            "required": [
                "Machine",
                "cpu",
                "createdAt",
                "currency",
                "deletedAt",
                "hourlyRate",
                "id",
                "memory",
                "monthlyRate",
                "name",
                "updatedAt"
            ],
            "properties": {
                "Machine": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.MachineModel"
                    }
                },
                "cpu": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/db.Currency"
                },
                "deletedAt": {
                    "type": "string"
                },
                "hourlyRate": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "monthlyRate": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.MachineStatus": {
            "type": "string",
            "enum": [
                "CREATING",
                "RUNNING",
                "REBOOTING",
                "SHUTTING_DOWN",
                "SHUTDOWN"
            ],
            "x-enum-varnames": [
                "MachineStatusCreating",
                "MachineStatusRunning",
                "MachineStatusRebooting",
                "MachineStatusShuttingDown",
                "MachineStatusShutdown"
            ]
        },
        "db.NetworkModel": {
            "type": "object",
            "required": [
                "createdAt",
                "deletedAt",
                "destinationPort",
                "hostName",
                "id",
                "ingressId",
                "listeningPort",
                "machine",
                "machineId",
                "protocol",
                "serviceId",
                "updatedAt"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "destinationPort": {
                    "type": "integer"
                },
                "hostName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ingressId": {
                    "type": "string"
                },
                "listeningPort": {
                    "type": "integer"
                },
                "machine": {
                    "$ref": "#/definitions/db.MachineModel"
                },
                "machineId": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.RepoConnectionModel": {
            "type": "object",
            "required": [
                "Deployment",
                "createdAt",
                "deletedAt",
                "id",
                "machine",
                "machineId",
                "repoId",
                "repoName",
                "updatedAt"
            ],
            "properties": {
                "Deployment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.DeploymentModel"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "machine": {
                    "$ref": "#/definitions/db.MachineModel"
                },
                "machineId": {
                    "type": "string"
                },
                "repoId": {
                    "type": "string"
                },
                "repoName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.SocialConnectionModel": {
            "type": "object",
            "required": [
                "connectionId",
                "connectionType",
                "createdAt",
                "deletedAt",
                "id",
                "updatedAt",
                "user",
                "userId"
            ],
            "properties": {
                "connectionId": {
                    "type": "string"
                },
                "connectionType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/db.UserModel"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "db.TransactionModel": {
            "type": "object",
            "required": [
                "amount",
                "createdAt",
                "currency",
                "deletedAt",
                "description",
                "id",
                "reference",
                "status",
                "type",
                "updatedAt",
                "user",
                "userId"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "$ref": "#/definitions/db.Currency"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.TransactionStatus"
                },
                "type": {
                    "$ref": "#/definitions/db.TransactionType"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/db.UserModel"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "db.TransactionStatus": {
            "type": "string",
            "enum": [
                "PENDING",
                "SUCCESS",
                "FAILED"
            ],
            "x-enum-varnames": [
                "TransactionStatusPending",
                "TransactionStatusSuccess",
                "TransactionStatusFailed"
            ]
        },
        "db.TransactionType": {
            "type": "string",
            "enum": [
                "DEBIT",
                "CREDIT"
            ],
            "x-enum-varnames": [
                "TransactionTypeDebit",
                "TransactionTypeCredit"
            ]
        },
        "db.UserModel": {
            "type": "object",
            "required": [
                "Card",
                "GithubAccountConnection",
                "Invoice",
                "Machine",
                "SocialConnection",
                "Transaction",
                "createdAt",
                "deletedAt",
                "email",
                "firstName",
                "id",
                "lastName",
                "password",
                "roles",
                "updatedAt"
            ],
            "properties": {
                "Card": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CardModel"
                    }
                },
                "GithubAccountConnection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GithubAccountConnectionModel"
                    }
                },
                "Invoice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.InvoiceModel"
                    }
                },
                "Machine": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.MachineModel"
                    }
                },
                "SocialConnection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SocialConnectionModel"
                    }
                },
                "Transaction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.TransactionModel"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "handlers.RedirectResult": {
            "type": "object",
            "required": [
                "link"
            ],
            "properties": {
                "link": {
                    "type": "string"
                }
            }
        },
        "lib.AuthTokens": {
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ],
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "services.DeployRepoArgs": {
            "type": "object",
            "required": [
                "connectionId",
                "ref"
            ],
            "properties": {
                "connectionId": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                }
            }
        },
        "types.Auth0UserArgs": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "types.AuthorizeCardArgs": {
            "type": "object",
            "required": [
                "otp",
                "reference"
            ],
            "properties": {
                "otp": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "types.CreateMachineArgs": {
            "type": "object",
            "required": [
                "machineImage",
                "machineName",
                "planId"
            ],
            "properties": {
                "machineImage": {
                    "type": "string"
                },
                "machineName": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                }
            }
        },
        "types.CreateMachinePlanArgs": {
            "type": "object",
            "required": [
                "cpu",
                "currency",
                "memory",
                "monthlyRate",
                "name"
            ],
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "monthlyRate": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.CreateNetworkArgs": {
            "type": "object",
            "required": [
                "destinationPort",
                "listeningPort",
                "machineId",
                "protocol"
            ],
            "properties": {
                "destinationPort": {
                    "type": "integer"
                },
                "listeningPort": {
                    "type": "integer"
                },
                "machineId": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "types.CreateRepoConnectionArgs": {
            "type": "object",
            "required": [
                "machineId",
                "repoId",
                "repoName"
            ],
            "properties": {
                "machineId": {
                    "type": "string"
                },
                "repoId": {
                    "type": "string"
                },
                "repoName": {
                    "type": "string"
                }
            }
        },
        "types.ListInvoiceArgs": {
            "type": "object",
            "properties": {
                "search": {
                    "type": "string"
                },
                "skip": {
                    "type": "integer"
                },
                "sortBy": {
                    "type": "string"
                },
                "take": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "types.LoginUserArgs": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.LoginUserResult": {
            "type": "object",
            "required": [
                "tokens"
            ],
            "properties": {
                "tokens": {
                    "$ref": "#/definitions/lib.AuthTokens"
                }
            }
        },
        "types.PreAuthorizeCardArgs": {
            "type": "object",
            "required": [
                "cardNumber",
                "cvv",
                "expiryMonth",
                "expiryYear",
                "pin"
            ],
            "properties": {
                "cardNumber": {
                    "type": "string"
                },
                "cvv": {
                    "type": "string"
                },
                "expiryMonth": {
                    "type": "string"
                },
                "expiryYear": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            }
        },
        "types.PreAuthorizeCardResult": {
            "type": "object",
            "required": [
                "reference"
            ],
            "properties": {
                "reference": {
                    "type": "string"
                }
            }
        },
        "types.RefreshAccessTokenArgs": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "types.RegisterUserArgs": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.RegisterUserResult": {
            "type": "object",
            "required": [
                "Card",
                "GithubAccountConnection",
                "Invoice",
                "Machine",
                "SocialConnection",
                "Transaction",
                "createdAt",
                "deletedAt",
                "email",
                "firstName",
                "id",
                "lastName",
                "password",
                "roles",
                "tokens",
                "updatedAt"
            ],
            "properties": {
                "Card": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.CardModel"
                    }
                },
                "GithubAccountConnection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GithubAccountConnectionModel"
                    }
                },
                "Invoice": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.InvoiceModel"
                    }
                },
                "Machine": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.MachineModel"
                    }
                },
                "SocialConnection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SocialConnectionModel"
                    }
                },
                "Transaction": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.TransactionModel"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokens": {
                    "$ref": "#/definitions/lib.AuthTokens"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "types.Repository": {
            "type": "object",
            "required": [
                "fullName",
                "id",
                "name",
                "private",
                "url"
            ],
            "properties": {
                "fullName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "types.UpdateCardArgs": {
            "type": "object",
            "properties": {
                "AuthToken": {
                    "type": "string"
                },
                "CardType": {
                    "type": "string"
                },
                "ExpiryMonth": {
                    "type": "string"
                },
                "ExpiryYear": {
                    "type": "string"
                },
                "IsApproved": {
                    "type": "boolean"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "LastDigits": {
                    "type": "string"
                }
            }
        },
        "types.UpdateMachineArgs": {
            "type": "object",
            "properties": {
                "machineImage": {
                    "type": "string"
                },
                "machineName": {
                    "type": "string"
                },
                "ownerId": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                }
            }
        },
        "types.UpdateMachinePlanArgs": {
            "type": "object",
            "properties": {
                "cpu": {
                    "description": "HourlyRate  *int32  ` + "`" + `json:\"hourlyRate\" swag-validate:\"optional\"` + "`" + `",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "monthlyRate": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.UpdateRepoConnectionArgs": {
            "type": "object",
            "properties": {
                "machineId": {
                    "type": "string"
                },
                "repoId": {
                    "type": "string"
                },
                "repoName": {
                    "type": "string"
                }
            }
        },
        "types.UpdateUserArgs": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Formatio API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
